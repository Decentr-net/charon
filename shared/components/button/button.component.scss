@import '../../styles/variables';

:host {
  --background-opacity: 1;
  align-items: center;
  border-radius: $border-radius;
  display: inline-flex;
  column-gap: $grid-step;
  cursor: pointer;
  font-weight: 500;
  justify-content: center;
  transition: background .3s ease, opacity .3s ease;
  user-select: none;

  &.mod-light-background {
    --background-opacity: .12;
  }

  &[app-icon-button] {
    padding: $grid-step;
  }

  &:not([app-icon-button]).mod-size {
    &-xs {
      padding: $grid-step $grid-step * 1.5 $grid-step $grid-step * 1.5;

      &.mod-with-icon {
        padding-left: $grid-step * 1;
      }
    }

    &-sm {
      padding: $grid-step $grid-step * 2 $grid-step $grid-step * 2;

      &.mod-with-icon {
        padding-left: $grid-step * 1.5;
      }
    }

    &-md {
      padding: $grid-step * 1.5 $grid-step * 3 $grid-step * 1.5 $grid-step * 3;

      &.mod-with-icon {
        padding-left: $grid-step * 2;
      }
    }
  }

  &.mod-color {
    &-negative {
      background: rgba($color-negative, var(--background-opacity));
      color: $color-white;
    }

    &-primary {
      background: rgba($color-primary, var(--background-opacity));
      color: $color-white;

      &:hover {
        background: rgba($color-blue-hover, var(--background-opacity));
      }
    }

    &-grey {
      background: rgba($color-background, var(--background-opacity));
      color: $color-black;

      &:hover {
        background: rgba($color-outlines, var(--background-opacity));
      }
    }

    &-white {
      background: rgba($color-white, var(--background-opacity));
      color: $color-black;

      &:hover {
        background: rgba($color-outlines, var(--background-opacity));
      }
    }
  }

  &:disabled {
    background: $color-background;
    color: $color-light-grey;
    pointer-events: none;
  }

  &::ng-deep {
    svg-icon {
      flex-shrink: 0;
    }
  }
}
