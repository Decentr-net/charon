{
  "name": "charon",
  "version": "4.0.0",
  "scripts": {
    "ng": "ng",
    "build": "npm run clean && npm-run-all --parallel build:charon build:scripts",
    "build:prod": "npm run clean && npm-run-all --parallel build:charon:prod build:scripts:prod && npm run pack",
    "build:prod:qa": "npm run clean && npm-run-all --parallel build:charon:prod build:scripts:prod:qa && npm run pack",
    "build:charon": "ng build charon",
    "build:charon:prod": "ng build charon --configuration production",
    "build:charon:stats": "ng build charon --stats-json",
    "build:scripts": "webpack --config projects/scripts/webpack.config.dev.js",
    "build:scripts:prod": "webpack --config projects/scripts/webpack.config.prod.js",
    "build:scripts:prod:qa": "cross-env QA=true webpack --config projects/scripts/webpack.config.prod.js",
    "generate-icons": "svg-generator",
    "clean": "rimraf dist",
    "lint": "ng lint --max-warnings=0",
    "pack": "cd dist && bestzip ../charon_extension.zip *",
    "pack_named": "cd dist && bestzip ../charon_$(date +'%Y%m%d-%H%M')_v$(node -p -e \"require('../package.json').version\")_$(echo $BROWSER).zip *",
    "test": "ng test",
    "watch": "npm run clean && npm-run-all --parallel watch:charon watch:scripts",
    "watch:charon": "ng build charon --watch --delete-output-path=false --sourceMap=false",
    "watch:scripts": "webpack --config projects/scripts/webpack.config.dev.js -w",
    "prepare": "husky install"
  },
  "private": true,
  "dependencies": {
    "@angular/animations": "~13.1.3",
    "@angular/cdk": "^13.1.3",
    "@angular/common": "~13.1.3",
    "@angular/compiler": "~13.1.3",
    "@angular/core": "~13.1.3",
    "@angular/forms": "~13.1.3",
    "@angular/material": "^13.1.3",
    "@angular/platform-browser": "~13.1.3",
    "@angular/platform-browser-dynamic": "~13.1.3",
    "@angular/router": "~13.1.3",
    "@ngneat/input-mask": "^5.1.0",
    "@ngneat/reactive-forms": "^4.0.4",
    "@ngneat/svg-icon": "^4.0.2",
    "@ngneat/transloco": "^3.1.3",
    "@ngneat/until-destroy": "^9.0.0",
    "@rxweb/reactive-form-validators": "^2.1.6",
    "clamp-js": "^0.7.0",
    "crypto-js": "^4.1.1",
    "d3": "~7.3.0",
    "decentr-js": "^4.1.0",
    "highcharts": "^9.3.2",
    "highcharts-angular": "^3.0.0",
    "html2canvas": "1.4.1",
    "inputmask": "^5.0.7",
    "jspdf": "^2.5.0",
    "ngx-skeleton-loader": "^4.0.0",
    "ngx-toastr": "~14.2.1",
    "ngx-trim-directive": "^1.1.0",
    "p-queue": "^7.1.0",
    "rxjs": "7.5.2",
    "tslib": "^2.3.1",
    "webextension-polyfill": "^0.8.0",
    "zone.js": "~0.11.4"
  },
  "devDependencies": {
    "@angular-devkit/build-angular": "~13.1.4",
    "@angular-eslint/builder": "13.0.1",
    "@angular-eslint/eslint-plugin": "13.0.1",
    "@angular-eslint/eslint-plugin-template": "13.0.1",
    "@angular-eslint/schematics": "13.0.1",
    "@angular-eslint/template-parser": "13.0.1",
    "@angular/cli": "~13.1.4",
    "@angular/compiler-cli": "~13.1.3",
    "@ngneat/svg-generator": "^3.2.1",
    "@types/crypto-js": "^4.1.0",
    "@types/d3": "^7.1.0",
    "@types/google.analytics": "^0.0.42",
    "@types/inputmask": "^5.0.1",
    "@types/jasmine": "~3.10.3",
    "@types/jasminewd2": "~2.0.3",
    "@types/node": "^12.20.42",
    "@types/resize-observer-browser": "^0.1.4",
    "@types/webextension-polyfill": "^0.8.2",
    "@typescript-eslint/eslint-plugin": "5.10.1",
    "@typescript-eslint/parser": "5.10.1",
    "bestzip": "^2.1.7",
    "copy-webpack-plugin": "^10.2.1",
    "cross-env": "^7.0.3",
    "eslint": "^8.7.0",
    "husky": "^7.0.4",
    "jasmine-core": "~4.0.0",
    "jasmine-spec-reporter": "~7.0.0",
    "karma": "~6.3.12",
    "karma-chrome-launcher": "~3.1.0",
    "karma-coverage-istanbul-reporter": "~3.0.2",
    "karma-jasmine": "~4.0.0",
    "karma-jasmine-html-reporter": "^1.7.0",
    "npm-run-all": "^4.1.5",
    "ts-loader": "^9.2.6",
    "typescript": "~4.5.5",
    "webpack": "^5.67.0",
    "webpack-cli": "^4.9.2",
    "webpack-merge": "^5.8.0"
  },
  "svgGenerator": {
    "outputPath": "./shared/svg-icons",
    "postfix": "",
    "prefix": "svg",
    "srcPath": "./assets/svg",
    "svgoConfig": {
      "plugins": [
        "cleanupAttrs",
        "removeDimensions"
      ]
    }
  }
}
