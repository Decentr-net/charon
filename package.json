{
  "name": "charon",
  "version": "3.8.0",
  "scripts": {
    "ng": "ng",
    "build": "npm run clean && npm-run-all --parallel build:charon build:scripts",
    "build:prod": "npm run clean && npm-run-all --parallel build:charon:prod build:scripts:prod && npm run pack",
    "build:prod:qa": "npm run clean && npm-run-all --parallel build:charon:prod build:scripts:prod:qa && npm run pack",
    "build:charon": "ng build charon",
    "build:charon:prod": "ng build charon --configuration production",
    "build:charon:stats": "ng build charon --stats-json",
    "build:scripts": "webpack --config projects/scripts/webpack.config.dev.js",
    "build:scripts:prod": "webpack --config projects/scripts/webpack.config.prod.js",
    "build:scripts:prod:qa": "cross-env QA=true webpack --config projects/scripts/webpack.config.prod.js",
    "generate-icons": "svg-generator",
    "clean": "rimraf dist",
    "lint": "ng lint --max-warnings=0",
    "pack": "cd dist && bestzip ../charon_extension.zip *",
    "pack_named": "cd dist && bestzip ../charon_$(date +'%Y%m%d-%H%M')_v$(node -p -e \"require('../package.json').version\")_$(echo $BROWSER).zip *",
    "test": "ng test",
    "watch": "npm run clean && npm-run-all --parallel watch:charon watch:scripts",
    "watch:charon": "ng build charon --watch --delete-output-path=false --sourceMap=false",
    "watch:scripts": "webpack --config projects/scripts/webpack.config.dev.js -w",
    "prepare": "husky install"
  },
  "private": true,
  "dependencies": {
    "@angular/animations": "~12.2.11",
    "@angular/cdk": "^12.2.11",
    "@angular/common": "~12.2.11",
    "@angular/compiler": "~12.2.11",
    "@angular/core": "~12.2.11",
    "@angular/forms": "~12.2.11",
    "@angular/material": "^12.2.11",
    "@angular/platform-browser": "~12.2.11",
    "@angular/platform-browser-dynamic": "~12.2.11",
    "@angular/router": "~12.2.11",
    "@ngneat/input-mask": "^3.0.3",
    "@ngneat/reactive-forms": "^3.1.2",
    "@ngneat/svg-icon": "^3.2.0",
    "@ngneat/transloco": "^3.0.6",
    "@ngneat/until-destroy": "^8.1.4",
    "@rxweb/reactive-form-validators": "^2.1.4",
    "clamp-js": "^0.7.0",
    "crypto-js": "^4.1.1",
    "d3": "~6.0.0",
    "decentr-js": "^3.0.0-rc7",
    "highcharts": "^9.3.0",
    "highcharts-angular": "^2.10.0",
    "html2canvas": "1.3.2",
    "inputmask": "^5.0.6",
    "jspdf": "^2.4.0",
    "ngx-skeleton-loader": "^4.0.0",
    "ngx-toastr": "~14.1.4",
    "ngx-trim-directive": "^1.1.0",
    "p-queue": "^6.6.2",
    "rxjs": "~6.6.0",
    "tslib": "^2.3.1",
    "webextension-polyfill": "^0.8.0",
    "zone.js": "~0.11.4"
  },
  "devDependencies": {
    "@angular-devkit/build-angular": "~12.2.11",
    "@angular-eslint/builder": "12.6.1",
    "@angular-eslint/eslint-plugin": "12.6.1",
    "@angular-eslint/eslint-plugin-template": "12.6.1",
    "@angular-eslint/schematics": "12.6.1",
    "@angular-eslint/template-parser": "12.6.1",
    "@angular/cli": "~12.2.11",
    "@angular/compiler-cli": "~12.2.11",
    "@ngneat/svg-generator": "^3.0.1",
    "@types/crypto-js": "^4.0.2",
    "@types/d3": "^6.2.0",
    "@types/google.analytics": "^0.0.42",
    "@types/inputmask": "^5.0.1",
    "@types/jasmine": "~3.10.1",
    "@types/jasminewd2": "~2.0.3",
    "@types/node": "^12.11.1",
    "@types/resize-observer-browser": "^0.1.4",
    "@types/webextension-polyfill": "^0.8.1",
    "@typescript-eslint/eslint-plugin": "4.28.2",
    "@typescript-eslint/parser": "4.28.2",
    "bestzip": "^2.1.7",
    "copy-webpack-plugin": "^9.0.1",
    "cross-env": "^7.0.3",
    "eslint": "^7.26.0",
    "husky": "^7.0.4",
    "jasmine-core": "~3.10.1",
    "jasmine-spec-reporter": "~7.0.0",
    "karma": "~6.3.6",
    "karma-chrome-launcher": "~3.1.0",
    "karma-coverage-istanbul-reporter": "~3.0.2",
    "karma-jasmine": "~4.0.0",
    "karma-jasmine-html-reporter": "^1.7.0",
    "npm-run-all": "^4.1.5",
    "ts-loader": "^9.2.6",
    "typescript": "~4.3.5",
    "webpack": "^5.60.0",
    "webpack-cli": "^4.9.1",
    "webpack-merge": "^5.8.0"
  },
  "svgGenerator": {
    "outputPath": "./shared/svg-icons",
    "postfix": "",
    "prefix": "svg",
    "srcPath": "./assets/svg",
    "svgoConfig": {
      "plugins": [
        "cleanupAttrs",
        "removeDimensions"
      ]
    }
  }
}
